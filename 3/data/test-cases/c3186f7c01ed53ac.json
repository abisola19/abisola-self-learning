{"uid":"c3186f7c01ed53ac","name":"Profile","fullName":"heatwave/Customer/Profile#Profile","historyId":"83881d81c1266e11b380a5e045fbe218:47a616c9130fe6de1fc315326804eccc","time":{"start":1723312799167,"stop":1723312799212,"duration":45},"status":"failed","statusMessage":"Response body property, Status code is 200, Profile fetched successfully, Status is active, Status code name has string","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response body property, Status code is 200, Profile fetched successfully, Status is active, Status code name has string","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response body property","time":{"start":1723312799209,"stop":1723312799209,"duration":0},"status":"failed","statusMessage":"expected undefined to be an object","statusTrace":"AssertionError: expected undefined to be an object\n   at Object.eval sandbox-script.js:1:55)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is 200","time":{"start":1723312799209,"stop":1723312799209,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:2:55)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Profile fetched successfully","time":{"start":1723312799210,"stop":1723312799210,"duration":0},"status":"failed","statusMessage":"expected 'Token expired' to deeply equal 'Profile fetched successfully'","statusTrace":"AssertionError: expected 'Token expired' to deeply equal 'Profile fetched successfully'\n   at Object.eval sandbox-script.js:3:55)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is active","time":{"start":1723312799210,"stop":1723312799210,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'status')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'status')\n   at Object.eval sandbox-script.js:4:55)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1723312799211,"stop":1723312799211,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'OK' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:5:55)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9749d36da95c4af","name":"PreRequest","source":"9749d36da95c4af.txt","type":"text/plain","size":339},{"uid":"8cadb7f46728c4f","name":"ConsoleLogs","source":"8cadb7f46728c4f.txt","type":"text/plain","size":33},{"uid":"5aa55692fd61005c","name":"Request Headers","source":"5aa55692fd61005c.json","type":"application/json","size":640},{"uid":"1131d1a517807fdf","name":"Response Headers","source":"1131d1a517807fdf.json","type":"application/json","size":516},{"uid":"fc0af22cc0a2b641","name":"Response Body","source":"fc0af22cc0a2b641.txt","type":"text/plain","size":27}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"heatwave"},{"name":"suite","value":"Customer"},{"name":"subSuite","value":"Profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://heatwave-backend.vercel.app/api/profile"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"6b038bb76aef8d52","reportUrl":"https://abisola19.github.io/abisola-self-learning/2//#testresult/6b038bb76aef8d52","status":"passed","time":{"start":1723282918814,"stop":1723282918922,"duration":108}},{"uid":"1ab353c3da804ad4","reportUrl":"https://abisola19.github.io/abisola-self-learning/2//#testresult/1ab353c3da804ad4","status":"passed","time":{"start":1723282258490,"stop":1723282258600,"duration":110}}]},"tags":[]},"source":"c3186f7c01ed53ac.json","parameterValues":["GET - https://heatwave-backend.vercel.app/api/profile","401"]}